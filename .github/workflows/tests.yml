name: Tests
on: [push, pull_request]

jobs:
  Windows:
    name: windows-${{ matrix.os-version }}-${{ matrix.build-config }}-${{ matrix.build-arch }}${{ matrix.build-tool }}
    runs-on: windows-${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [2019, 2022]
        build-config: [debug, release, relwithdebinfo]
        build-arch: [Win32, x64]
        build-tool: ["", "-T ClangCL"]
        exclude:
        - build-arch: Win32
          build-tool: "-T ClangCL"

    steps:
    - name: Versions
      shell: bash
      run: |
        cmake --version
        git --version

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Configure
      shell: bash
      run: |
        mkdir build
        cd build
        cmake -A${{ matrix.build-arch }} ${{ matrix.build-tool }} -DCMAKE_BUILD_TYPE=${{ matrix.build-config }} ..

    - name: Build
      shell: bash
      run: |
        cd build
        cmake --build . --config ${{ matrix.build-config }}


  Ubuntu:
    name: ubuntu-${{ matrix.os-version }}-${{ matrix.build-config }}-${{ matrix.compiler.cc }}
    runs-on: ubuntu-${{ matrix.os-version }}.04
    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [22]
        build-config: [debug, release, relwithdebinfo]
        compiler:
        - {
            cc: gcc-12,
            cxx: g++-12,
            install: gcc-12 g++-12
          }
        - {
            cc: clang-12,
            cxx: clang++-12,
            install: clang-12
          }
        - {
            cc: clang-13,
            cxx: clang++-13,
            install: clang-13
          }
        - {
            cc: clang-14,
            cxx: clang++-14,
            install: clang-14
          }

    steps:
    - name: Install packages
      run: |
        sudo apt-get update
        sudo apt-get install -y xorg-dev nasm ${{ matrix.compiler.install }}

    - name: Versions
      run: |
        cmake --version
        ${{ matrix.compiler.cc }} --version
        ${{ matrix.compiler.cxx }} --version
        git --version

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.build-config }} ..

    - name: Build
      run: |
        cd build
        cmake --build . --config ${{ matrix.build-config }} -- -j3


  Assets:
    name: Assets
    runs-on: ubuntu-22.04
    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}
    strategy:
      fail-fast: false
      matrix:
        build-config: [release]
        compiler:
        - {
            cc: gcc-12,
            cxx: g++-12,
            install: gcc-12 g++-12
          }

    steps:
    - name: Install packages
      run: |
        sudo apt-get update
        sudo apt-get install -y xorg-dev nasm ${{ matrix.compiler.install }}

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Configure and Build
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.build-config }} ..
        cmake --build . --config ${{ matrix.build-config }} -- -j3

    - name: Assets
      run: |
        cd build/result/${{ matrix.build-config }}
        ./cage-asset-database
